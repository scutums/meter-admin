document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    const token = localStorage.getItem("token");
    if (!token) {
        window.location.href = "/login.html";
        return;
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
    fetch('/partials/nav.html')
        .then(response => response.text())
        .then(html => {
            document.getElementById('nav-placeholder').innerHTML = html;
            // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            updateUsername();
        });

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    loadUsers();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    document.getElementById('editUserForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const userId = document.getElementById('editUserId').value;
        const fullName = document.getElementById('editFullName').value;
        const phone = document.getElementById('editPhone').value;

        fetch(`/api/users-management/update/${userId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                full_name: fullName,
                phone: phone
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert('–û—à–∏–±–∫–∞: ' + data.error);
            } else {
                alert('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
                hideEditForm();
                loadUsers();
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
        });
    });
});

function updateUsername() {
    const token = localStorage.getItem("token");
    fetch("/api/auth-user-info", {
        headers: { Authorization: "Bearer " + token }
    })
    .then(res => res.json())
    .then(user => {
        const usernameElement = document.getElementById("username");
        if (usernameElement) {
            usernameElement.textContent = "üë§ " + (user.full_name || user.plot_number || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
        }
    })
    .catch(() => {
        const usernameElement = document.getElementById("username");
        if (usernameElement) {
            usernameElement.textContent = "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
        }
    });
}

function loadUsers() {
    const token = localStorage.getItem("token");
    fetch('/api/users-management/list', {
        headers: {
            'Authorization': `Bearer ${token}`
        }
    })
    .then(response => response.json())
    .then(users => {
        const tbody = document.querySelector('#usersTable tbody');
        tbody.innerHTML = '';

        users.forEach(user => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${user.plot_number}</td>
                <td>${user.full_name}</td>
                <td>${user.phone}</td>
                <td>${user.viber_id ? '–î–∞' : '–ù–µ—Ç'}</td>
                <td>${user.notifications_enabled ? '–í–∫–ª—é—á–µ–Ω—ã' : '–û—Ç–∫–ª—é—á–µ–Ω—ã'}</td>
                <td>${user.reminder_day || '-'}</td>
                <td>${user.viber_details || '-'}</td>
                <td>
                    <button class="btn btn-sm btn-primary" onclick="editUser(${user.id}, '${user.full_name}', '${user.phone}')">
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    ${user.viber_id ? `
                        <button class="btn btn-sm btn-danger" onclick="disconnectViber(${user.id})">
                            –û—Ç–∫–ª—é—á–∏—Ç—å Viber
                        </button>
                    ` : ''}
                </td>
            `;
            tbody.appendChild(row);
        });
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
    });
}

function editUser(id, fullName, phone) {
    document.getElementById('editUserId').value = id;
    document.getElementById('editFullName').value = fullName;
    document.getElementById('editPhone').value = phone;
    document.getElementById('editFormContainer').style.display = 'block';
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ
    document.getElementById('editFormContainer').scrollIntoView({ behavior: 'smooth' });
}

function hideEditForm() {
    document.getElementById('editFormContainer').style.display = 'none';
    document.getElementById('editUserForm').reset();
}

function disconnectViber(userId) {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç Viber?')) {
        const token = localStorage.getItem("token");
        fetch(`/api/users-management/disconnect-viber/${userId}`, {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert('–û—à–∏–±–∫–∞: ' + data.error);
            } else {
                alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç Viber');
                loadUsers();
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç Viber');
        });
    }
} 